import{_ as n,V as s,W as a,X as p}from"./framework-48406333.js";const t={},e=p(`<ul><li><a href="#1-file">1. file</a><ul><li><a href="#11-%E6%96%87%E4%BB%B6%E5%90%8D%E7%9A%84%E9%97%AE%E9%A2%98">1.1. 文件名的问题</a><ul><li><a href="#111-%E7%A6%81%E6%AD%A2%E5%AD%97%E7%AC%A6">1.1.1. 禁止字符</a></li><li><a href="#112-%E4%B8%8D%E5%8F%AF%E4%BB%A5%E8%A7%81%E5%AD%97%E7%AC%A6">1.1.2. 不可以见字符</a></li></ul></li></ul></li></ul><h1 id="_1-file" tabindex="-1"><a class="header-anchor" href="#_1-file" aria-hidden="true">#</a> 1. file</h1><h2 id="_1-1-文件名的问题" tabindex="-1"><a class="header-anchor" href="#_1-1-文件名的问题" aria-hidden="true">#</a> 1.1. 文件名的问题</h2><h3 id="_1-1-1-禁止字符" tabindex="-1"><a class="header-anchor" href="#_1-1-1-禁止字符" aria-hidden="true">#</a> 1.1.1. 禁止字符</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>fileName <span class="token operator">=</span> <span class="token string">&#39;&quot;stop，things&quot;.html&#39;</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题不是中文字符<code>，</code>，而是文件的命名规则，不能带有<code>&quot;</code>。所有的禁止字符是英文符号<code>&quot; ? : * &lt; &gt; | \\ /</code>（英文的引号不行<code>&quot;</code>，但是中文的引号可以<code>“”</code>）</p><h3 id="_1-1-2-不可以见字符" tabindex="-1"><a class="header-anchor" href="#_1-1-2-不可以见字符" aria-hidden="true">#</a> 1.1.2. 不可以见字符</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>fileName <span class="token operator">=</span> <span class="token string">&#39;father\\u200b.html&#39;</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;es&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>\\u200b</code>之类的字符就是不可见字符，直接替换<code>s = s.replace(&#39;\\u200b&#39;, &#39;&#39;)</code>可以。</p><p>但是并不是只有<code>\\u200b</code>这一个，还有类似<code>\\x10</code>之类乱七八槽的。</p><p>所以我们用<code>c.isprintable()</code>来判断。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">getStr</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;\\\\&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

    <span class="token comment"># unprintable char</span>
    s <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>c <span class="token keyword">for</span> c <span class="token keyword">in</span> s <span class="token keyword">if</span> c<span class="token punctuation">.</span>isprintable<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","file.html.vue"]]);export{r as default};
