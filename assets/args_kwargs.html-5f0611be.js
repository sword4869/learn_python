import{_ as p,V as e,W as o,Y as n,Z as s,$ as c,X as a,D as i}from"./framework-48406333.js";const l={},u=a('<ul><li><a href="#1-%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0">1. 定义函数</a></li><li><a href="#2-%E4%BC%A0%E5%85%A5%E5%87%BD%E6%95%B0">2. 传入函数</a><ul><li><a href="#21-%E8%A7%A3%E5%8C%85">2.1. 解包</a></li><li><a href="#22-dict%E6%8D%9F%E8%80%97">2.2. dict损耗</a></li><li><a href="#23-%E5%8F%AA%E6%98%AF%E5%9C%A8%E4%BC%A0dict">2.3. 只是在传dict</a></li><li><a href="#24-%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB">2.4. 对应关系</a></li></ul></li></ul><hr>',2),r={href:"https://blog.csdn.net/cadi2011/article/details/84871401",target:"_blank",rel:"noopener noreferrer"},d=n("em",null,"参数，**参数，以及传入",-1),k=a(`<ul><li><code>*</code>的是args, 主要是<code>tuple, list</code>类型</li><li><code>**</code>的是kwargs, <code>dict</code>类型、</li></ul><h2 id="_1-定义函数" tabindex="-1"><a class="header-anchor" href="#_1-定义函数" aria-hidden="true">#</a> 1. 定义函数</h2><p>定义函数时，<code>*args</code>表示不定量的<code>&quot;北京&quot;, &quot;海淀&quot;</code>这种形式，<code>**kwargs</code>(keyword args)表示不定量的<code>style=&quot;开心&quot;, price=0.1</code>这种形式。</p><p>顺序： <code>普通参数</code>-&gt;<code>默认值参数</code>-&gt;<code>*args</code>-&gt;<code>**kwargs</code></p><ul><li>默认值参数位于普通参数后面，</li><li><code>*args, **kwargs</code>位于普通参数和默认值参数后面</li><li><code>**kwargs</code>位于<code>*args</code>后面。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># def printStr(普通参数, 默认值参数=&quot;默认值&quot;, *参数, **参数):</span>
<span class="token keyword">def</span> <span class="token function">my_first_blood</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment"># 取出</span>

<span class="token comment"># &quot;王&quot; | 32 | &quot;北京&quot;, &quot;海淀&quot; | style=&quot;开心&quot;</span>
my_first_blood<span class="token punctuation">(</span><span class="token string">&quot;王&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;北京&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;海淀&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;开心&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 王</span>
<span class="token comment"># 32</span>
<span class="token comment"># (&#39;北京&#39;, &#39;海淀&#39;)</span>
<span class="token comment"># {&#39;style&#39;: &#39;开心&#39;}</span>
<span class="token comment"># 开心</span>

<span class="token comment"># &quot;王&quot; | 32 | &quot;北京&quot;, &quot;海淀&quot; | style=&quot;开心&quot;</span>
my_first_blood<span class="token punctuation">(</span><span class="token string">&quot;王&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;北京&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;海淀&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;开心&quot;</span><span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
<span class="token comment"># 王</span>
<span class="token comment"># 32</span>
<span class="token comment"># (&#39;北京&#39;, &#39;海淀&#39;)</span>
<span class="token comment"># {&#39;style&#39;: &#39;开心&#39;, &#39;price&#39;: 0.1}</span>
<span class="token comment"># 开心</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-传入函数" tabindex="-1"><a class="header-anchor" href="#_2-传入函数" aria-hidden="true">#</a> 2. 传入函数</h2><h3 id="_2-1-解包" tabindex="-1"><a class="header-anchor" href="#_2-1-解包" aria-hidden="true">#</a> 2.1. 解包</h3><p><code>*</code>用来解开 tuple, list, str, range, dict</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>first <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span>first<span class="token punctuation">)</span>
<span class="token comment"># 1 2 3</span>

second <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span>second<span class="token punctuation">)</span>
<span class="token comment"># 1 2 3</span>
 
third <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span>third<span class="token punctuation">)</span>
<span class="token comment"># 1 2 3</span>

fourth <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span>fourth<span class="token punctuation">)</span>
<span class="token comment"># 0 1 2 3</span>

fifth <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span>fifth<span class="token punctuation">)</span>
<span class="token comment"># a b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>**</code>用来解包字典，相当于<code>k1=v1, k2=v2,...</code></p><h3 id="_2-2-dict损耗" tabindex="-1"><a class="header-anchor" href="#_2-2-dict损耗" aria-hidden="true">#</a> 2.2. dict损耗</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">full_dict</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> <span class="token operator">**</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">)</span>
    <span class="token comment"># 100 {&#39;name&#39;: &#39;tyson&#39;, &#39;age&#39;: &#39;99&#39;}</span>

<span class="token keyword">def</span> <span class="token function">half_dict</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token operator">**</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">)</span>
    <span class="token comment"># 100 tyson {&#39;age&#39;: &#39;99&#39;}</span>

d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;tyson&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;99&quot;</span><span class="token punctuation">}</span>
<span class="token comment"># 等同于 full_dict(100, name=&quot;tyson&quot;, age=&quot;99&quot;) </span>
full_dict<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">**</span>d<span class="token punctuation">)</span>
half_dict<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">**</span>d<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-只是在传dict" tabindex="-1"><a class="header-anchor" href="#_2-3-只是在传dict" aria-hidden="true">#</a> 2.3. 只是在传dict</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">full_dict</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> <span class="token operator">**</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">)</span>
    <span class="token comment"># 100 {&#39;name&#39;: &#39;tyson&#39;, &#39;age&#39;: &#39;99&#39;}</span>

<span class="token keyword">def</span> <span class="token function">just_dict</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span>
    <span class="token comment"># {&#39;name&#39;: &#39;tyson&#39;, &#39;age&#39;: &#39;99&#39;}</span>
    full_dict<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">**</span><span class="token builtin">dict</span><span class="token punctuation">)</span>
    
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;tyson&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;99&quot;</span><span class="token punctuation">}</span>
just_dict<span class="token punctuation">(</span>d<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-对应关系" tabindex="-1"><a class="header-anchor" href="#_2-4-对应关系" aria-hidden="true">#</a> 2.4. 对应关系</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_args_kwargs</span><span class="token punctuation">(</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">,</span> arg3<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;arg1:&quot;</span><span class="token punctuation">,</span> arg1<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;arg2:&quot;</span><span class="token punctuation">,</span> arg2<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;arg3:&quot;</span><span class="token punctuation">,</span> arg3<span class="token punctuation">)</span>

<span class="token comment"># 一一对应</span>
args <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
test_args_kwargs<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span>

<span class="token comment"># 会正确对应到相应的位置：arg1=5, arg2=&#39;two&#39;, arg3=3</span>
kwargs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;arg3&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;arg2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
test_args_kwargs<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>

<span class="token comment"># 默认值 arg3=None</span>
kwargs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;arg2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
test_args_kwargs<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function m(v,b){const t=i("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[s("Python之可变参数，"),d,s("参数，**参数解包，*args，**kwargs的理解"),c(t)])]),k])}const q=p(l,[["render",m],["__file","args_kwargs.html.vue"]]);export{q as default};
