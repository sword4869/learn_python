import{_ as p,V as t,W as e,Y as n,Z as o,$ as c,X as s,D as l}from"./framework-48406333.js";const i={},u=s('<ul><li><a href="#1-install">1. Install</a></li><li><a href="#2-base">2. Base</a><ul><li><a href="#21-hello-example">2.1. hello example</a></li><li><a href="#22-%E5%B8%AE%E5%8A%A9%E6%8F%90%E7%A4%BA">2.2. 帮助提示</a></li><li><a href="#23-%E8%87%AA%E5%8A%A8%E5%8C%B9%E9%85%8D%E5%89%8D%E7%BC%80">2.3. 自动匹配前缀</a></li><li><a href="#24-%E9%95%BF%E7%9F%AD%E5%8F%82%E6%95%B0">2.4. 长短参数</a></li><li><a href="#25-type">2.5. type</a></li><li><a href="#26-%E5%BF%85%E9%80%89%E5%8F%82%E6%95%B0%E5%8F%AF%E9%80%89%E5%8F%82%E6%95%B0">2.6. 必选参数&amp;可选参数</a></li><li><a href="#27-nargs">2.7. nargs</a></li><li><a href="#28-%E7%9F%9B%E7%9B%BE%E5%8F%82%E6%95%B0">2.8. 矛盾参数</a></li></ul></li><li><a href="#3-action">3. action</a><ul><li><a href="#31-%E8%AE%A1%E6%95%B0count">3.1. 计数count</a></li><li><a href="#32-%E9%99%90%E5%AE%9A%E9%80%89%E9%A1%B9">3.2. 限定选项</a></li></ul></li></ul><h1 id="_1-install" tabindex="-1"><a class="header-anchor" href="#_1-install" aria-hidden="true">#</a> 1. Install</h1><p>内置于python，不需要安装</p>',3),r={href:"https://docs.python.org/3/library/argparse.html",target:"_blank",rel:"noopener noreferrer"},k=s(`<h1 id="_2-base" tabindex="-1"><a class="header-anchor" href="#_2-base" aria-hidden="true">#</a> 2. Base</h1><h2 id="_2-1-hello-example" tabindex="-1"><a class="header-anchor" href="#_2-1-hello-example" aria-hidden="true">#</a> 2.1. hello example</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> argparse

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--integer&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 自带的函数，来打印 help信息</span>
parser<span class="token punctuation">.</span>print_help<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
<span class="token comment"># . 来引用</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>integer<span class="token punctuation">)</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
# python t.py --integer=1
$ python t.py --integer 1
usage: t.py [-h] [--integer INTEGER]

optional arguments:
  -h, --help         show this help message and exit
  --integer INTEGER
Namespace(integer=1)
1
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> argparse
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--integer&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
_StoreAction<span class="token punctuation">(</span>option_strings<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;--integer&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;integer&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> const<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--integer=1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-帮助提示" tabindex="-1"><a class="header-anchor" href="#_2-2-帮助提示" aria-hidden="true">#</a> 2.2. 帮助提示</h2><p>两处帮助提示。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> argparse

<span class="token comment"># description是此脚本的提示信息</span>
parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">&#39;一个最简单的argsparse库的使用的例子&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># help是参数的提示信息</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--integer&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;一个输入的整数\\n不能换行&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 在py文件中换行</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span>
    <span class="token string">&quot;--mixed_precision&quot;</span><span class="token punctuation">,</span>
    <span class="token builtin">help</span><span class="token operator">=</span><span class="token punctuation">(</span>
        <span class="token string">&quot;Whether to use mixed precision. Choose between fp16 and bf16 (bfloat16). Bf16 requires PyTorch &gt;=&quot;</span>
        <span class="token string">&quot; 1.10.and an Nvidia Ampere GPU.  Default to the value of accelerate config of the current system or the&quot;</span>
        <span class="token string">&quot; flag passed with the \`accelerate.launch\` command. Use this argument to override the accelerate config.&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>integer<span class="token punctuation">)</span>

<span class="token string">&#39;&#39;</span>&#39;
usage<span class="token punctuation">:</span> t<span class="token punctuation">.</span>py <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>integer INTEGER<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>mixed_precision MIXED_PRECISION<span class="token punctuation">]</span>

一个最简单的argsparse库的使用的例子

options<span class="token punctuation">:</span>
  <span class="token operator">-</span>h<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">help</span>            show this <span class="token builtin">help</span> message <span class="token keyword">and</span> exit
  <span class="token operator">-</span><span class="token operator">-</span>integer INTEGER     一个输入的整数 不能换行
  <span class="token operator">-</span><span class="token operator">-</span>mixed_precision MIXED_PRECISION
                        Whether to use mixed precision<span class="token punctuation">.</span> Choose between fp16 <span class="token keyword">and</span> bf16 <span class="token punctuation">(</span>bfloat16<span class="token punctuation">)</span><span class="token punctuation">.</span> Bf16 requires PyTorch <span class="token operator">&gt;=</span> <span class="token number">1.10</span><span class="token punctuation">.</span><span class="token keyword">and</span> an Nvidia Ampere GPU<span class="token punctuation">.</span> Default to the value of accelerate
                        config of the current system <span class="token keyword">or</span> the flag passed <span class="token keyword">with</span> the \`accelerate<span class="token punctuation">.</span>launch\` command<span class="token punctuation">.</span> Use this argument to override the accelerate config<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-自动匹配前缀" tabindex="-1"><a class="header-anchor" href="#_2-3-自动匹配前缀" aria-hidden="true">#</a> 2.3. 自动匹配前缀</h2><p>唯一前缀，怎么缩短都行。注意缩到最短，是<code>--i</code>，不要记混成<code>-i</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--integer&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--integer 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--integ 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--in 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--i 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前缀冲突</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--integer1&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--integer2&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--in 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>integer1 INTEGER1<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>integer2 INTEGER2<span class="token punctuation">]</span>
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> ambiguous option<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token keyword">in</span> could <span class="token keyword">match</span> <span class="token operator">-</span><span class="token operator">-</span>integer1<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token operator">-</span>integer2
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--integer1 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> integer1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> integer2<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-4-长短参数" tabindex="-1"><a class="header-anchor" href="#_2-4-长短参数" aria-hidden="true">#</a> 2.4. 长短参数</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 单字母</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-i&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--integer&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>

<span class="token comment"># 遇到重复单字母时，也可以多字母</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-iF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--inputfile&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不要把<code>-iF</code>（短参数的多字母）和<code>--in</code>（长参数的自动匹配前缀）搞混乱了。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> argparse

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-i&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--integer&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-iF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--inputfile&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&#39;&#39;&#39;
(fff) PS E:\\CodeProject\\Git\\rubbish&gt; python a.py -i 1
hello Namespace(integer=1)
(fff) PS E:\\CodeProject\\Git\\rubbish&gt; python a.py --integer 1
hello Namespace(integer=1)
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-5-type" tabindex="-1"><a class="header-anchor" href="#_2-5-type" aria-hidden="true">#</a> 2.5. type</h2><blockquote><p><code>int</code>, <code>float</code>, <code>str</code></p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>虽然默认 <code>type=None</code>， 但其实都解析为 <code>str</code> ，传啥都是 str 类型</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--k&#39;</span><span class="token punctuation">)</span>
_StoreAction<span class="token punctuation">(</span>option_strings<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;--k&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;k&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> const<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--k None&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token string">&#39;None&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--k 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--k 1.1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token string">&#39;1.1&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--k [2312]&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token string">&#39;[2312]&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认值 <code>default=None</code>, 是None的话就没必要再写了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--a&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--b&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>bool</p></blockquote><p>还用上面的写法会在False上出问题，得用action</p><ul><li><code>store_true</code>: 用上时值为<code>True</code>，不用时取默认值<code>False</code></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 用上表示True，不用False</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--online&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
_StoreTrueAction<span class="token punctuation">(</span>option_strings<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;--online&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> const<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token comment"># 可以赋值默认False，效果同上</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--online&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># 出问题了，用不上和用上都是True</span>
<span class="token comment"># parser.add_argument(&#39;--online&#39;, action=&#39;store_true&#39;, default=True)</span>

<span class="token comment">### 必须不赋值</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>online<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--online&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>online<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment">### 赋值不可以 error: unrecognized arguments: True</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--online True&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> a<span class="token punctuation">.</span>py <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>online<span class="token punctuation">]</span>
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> unrecognized arguments<span class="token punctuation">:</span> <span class="token boolean">True</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--online False&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>online<span class="token punctuation">]</span>
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> unrecognized arguments<span class="token punctuation">:</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>store_false</code>: 反向，不用是默认值<code>True</code>，用了<code>False</code></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 正确的是</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--online&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_false&#39;</span><span class="token punctuation">)</span>
_StoreFalseAction<span class="token punctuation">(</span>option_strings<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;--online&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> const<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>online<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--online&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>online<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>带空格</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 用引号即可</span>
$ python main.py <span class="token parameter variable">--in_article</span> <span class="token string">&quot;docs/virtual environment/drivers.md&quot;</span>
Namespace<span class="token punctuation">(</span>in_article<span class="token operator">=</span><span class="token string">&#39;docs/virtual environment/drivers.md&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--in_article&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Input article, relativate path&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 问题不是引号，而是出在 split()</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--in_article docs/virtual environment/drivers.md&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span>in_article IN_ARTICLE
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> unrecognized arguments<span class="token punctuation">:</span> environment<span class="token operator">/</span>drivers<span class="token punctuation">.</span>md
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--in_article &quot;docs/virtual environment/drivers.md&quot;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span>in_article IN_ARTICLE
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> unrecognized arguments<span class="token punctuation">:</span> environment<span class="token operator">/</span>drivers<span class="token punctuation">.</span>md&quot;

<span class="token comment"># 所以只能手动分割</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;--in_article&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;docs/virtual environment/drivers.md&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>in_article<span class="token operator">=</span><span class="token string">&#39;docs/virtual environment/drivers.md&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-6-必选参数-可选参数" tabindex="-1"><a class="header-anchor" href="#_2-6-必选参数-可选参数" aria-hidden="true">#</a> 2.6. 必选参数&amp;可选参数</h2><blockquote><p>Method1: 有没有<code>--</code></p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 必选</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token comment"># 可选</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--b&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>


<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;1 --b=2&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 必须不可缺</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> a<span class="token punctuation">.</span>py <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>b B<span class="token punctuation">]</span> a
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> the following arguments are required<span class="token punctuation">:</span> a
<span class="token comment"># 这种方式不能加 \`--\`</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--a=1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>b B<span class="token punctuation">]</span> a
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> the following arguments are required<span class="token punctuation">:</span> a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Method2：<code>--</code>并且<code>required=True</code></p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 必选</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--c&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># 可选</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--d&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--c=1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>

<span class="token comment"># 同样不可或缺</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span>c C <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>d D<span class="token punctuation">]</span>
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> the following arguments are required<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span>c
<span class="token comment"># 这种方式必须加 --</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">-</span>h<span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">-</span>c C <span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">-</span>d D<span class="token punctuation">]</span>
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> the following arguments are required<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span>c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-7-nargs" tabindex="-1"><a class="header-anchor" href="#_2-7-nargs" aria-hidden="true">#</a> 2.7. nargs</h2><ul><li><p>不是列表：通配符 <code>&#39;?&#39;</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--h&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>h<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--h 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>h<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>列表：<code>N</code>(具体是正整数 1,2,3), 通配符 <code>&#39;+&#39;</code>, <code>&#39;*&#39;</code></p><p>nargs=<code>*</code>，和<code>N</code>类似，但是没有规定列表长度。</p><p>nargs=<code>+</code>，和<code>*</code>类似，但是给对应的项当没有传入参数时，会报错error: too few arguments。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">######### N</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--a&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> 
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--b&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> 
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--a 1 2 --b 3&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">######### +</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--j&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--j 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--j&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">:</span> error<span class="token punctuation">:</span> argument <span class="token operator">-</span><span class="token operator">-</span>a<span class="token punctuation">:</span> expected at least one argument

<span class="token comment">######### *</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--k&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--k 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--k&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>空列表<code>[]</code>还是<code>None</code>, 修改<code>default</code>值</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># N + * 都可以</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--a&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--b&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>如果没有在命令行中出现对应的项 <code>parser.parse_args(&#39;&#39;.split())</code>，则给对应的项赋值为default。特殊的是，对于可选项，如果命令行中出现了此可选项，但是之后没有跟随赋值参数 <code>parser.parse_args(&#39;--a&#39;.split())</code>，则此时给此可选项并不是赋值default的值，而是赋值const的值。</p><p><code>const</code>值</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 可选参数的通配符，如果可选参数写了不跟参数，那么用const，而不是default</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--c&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span> 
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--d&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">,</span> const<span class="token operator">=</span><span class="token string">&#39;d_const&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;d_default&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--c 1 --d 3&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--c 1 --d&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token string">&#39;d_const&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token string">&#39;--c 1&#39;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Namespace<span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token string">&#39;d_default&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-8-矛盾参数" tabindex="-1"><a class="header-anchor" href="#_2-8-矛盾参数" aria-hidden="true">#</a> 2.8. 矛盾参数</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>group <span class="token operator">=</span> parser<span class="token punctuation">.</span>add_mutually_exclusive_group<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># group = parser.add_mutually_exclusive_group(required=True)</span>
group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-v&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--verbose&quot;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-q&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--quiet&quot;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-action" tabindex="-1"><a class="header-anchor" href="#_3-action" aria-hidden="true">#</a> 3. action</h1><h2 id="_3-1-计数count" tabindex="-1"><a class="header-anchor" href="#_3-1-计数count" aria-hidden="true">#</a> 3.1. 计数count</h2><p>若default不设为0，则会有None和整数比较的异常。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> argparse

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--verbosity&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>

<span class="token keyword">if</span> args<span class="token punctuation">.</span>verbosity <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;long long form&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> args<span class="token punctuation">.</span>verbosity <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;long form&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;short form&#39;</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&#39;&#39;&#39;
$ python a.py
hello Namespace(verbosity=0)
short form

$ python a.py --verbosity
hello Namespace(verbosity=1)
long form

$ python a.py --verbosity --verbosity
hello Namespace(verbosity=2)
long long form
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-2-限定选项" tabindex="-1"><a class="header-anchor" href="#_3-2-限定选项" aria-hidden="true">#</a> 3.2. 限定选项</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> argparse

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--level&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&#39;&#39;&#39;
(fff) PS E:\\CodeProject\\Git\\rubbish&gt; python a.py 
hello Namespace(level=None)
(fff) PS E:\\CodeProject\\Git\\rubbish&gt; python a.py --level 0
hello Namespace(level=0)
(fff) PS E:\\CodeProject\\Git\\rubbish&gt; python a.py --level 1
hello Namespace(level=1)
(fff) PS E:\\CodeProject\\Git\\rubbish&gt; python a.py --level 12
usage: a.py [-h] [--level {0,1}]
a.py: error: argument --level: invalid choice: 12 (choose from 0, 1)
&#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># how to specify a list arg (eg. arg which has action=&quot;append&quot;)</span>
fruit <span class="token operator">=</span> <span class="token punctuation">[</span>apple<span class="token punctuation">,</span> orange<span class="token punctuation">,</span> lemon<span class="token punctuation">]</span>
indexes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">35</span> <span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51);function d(v,g){const a=l("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[n("a",r,[o("https://docs.python.org/3/library/argparse.html"),c(a)])]),k])}const b=p(i,[["render",d],["__file","argparse.html.vue"]]);export{b as default};
