import{_ as n,V as s,W as a,X as e}from"./framework-48406333.js";const t={},o=e(`<ul><li><a href="#1-copy-file">1. copy file</a></li><li><a href="#2-copy-directory">2. copy directory</a></li><li><a href="#3-remove-directory">3. remove directory</a></li><li><a href="#4-move-file-or-directory">4. move file or directory</a></li></ul><hr><h2 id="_1-copy-file" tabindex="-1"><a class="header-anchor" href="#_1-copy-file" aria-hidden="true">#</a> 1. copy file</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> shutil

shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span>
shutil<span class="token punctuation">.</span>copy2<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span>

<span class="token comment"># dst is directory</span>
filename <span class="token operator">=</span> shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token string">&#39;./f/g/.gitignore&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./f&#39;</span><span class="token punctuation">)</span>       <span class="token comment"># &#39;./f\\\\.gitignore&#39;</span>
<span class="token comment"># dst is file</span>
filename <span class="token operator">=</span> shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token string">&#39;./f/g/.gitignore&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./f/.g&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># &#39;./f/.g&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copies the file <code>src</code> to the file or directory <code>dst</code></p><ul><li>If <code>dst</code> specifies a <strong>directory</strong>, the file will be copied into <code>dst</code> using the base filename from <code>src</code>.</li><li>If <code>dst</code> specifies a <strong>file</strong> that already exists, it will be <strong>replaced</strong>.</li><li>Returns the path to the newly created file.</li></ul><p><code>copy()</code> copies the file data and the file’s permission mode. Other metadata, like the file’s <strong>creation and modification times</strong>, is not preserved. To preserve all file metadata from the original, use <code>copy2()</code> instead.</p><h2 id="_2-copy-directory" tabindex="-1"><a class="header-anchor" href="#_2-copy-directory" aria-hidden="true">#</a> 2. copy directory</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>shutil<span class="token punctuation">.</span>copytree<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span>
shutil<span class="token punctuation">.</span>copytree<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> ignore<span class="token operator">=</span>shutil<span class="token punctuation">.</span>ignore_patterns<span class="token punctuation">(</span><span class="token string">&#39;*.pyc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tmp*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
shutil<span class="token punctuation">.</span>copytree<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> dirs_exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>


directoryName <span class="token operator">=</span> shutil<span class="token punctuation">.</span>copytree<span class="token punctuation">(</span><span class="token string">&#39;./f/g&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./aaa&#39;</span><span class="token punctuation">)</span>   <span class="token comment"># &#39;./aaa&#39;</span>
directoryName <span class="token operator">=</span> shutil<span class="token punctuation">.</span>copytree<span class="token punctuation">(</span><span class="token string">&#39;./f/g&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./aaa&#39;</span><span class="token punctuation">,</span> dirs_exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>   <span class="token comment"># &#39;./aaa&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>src</code> 文件夹里面的内容复制到 <code>dst</code>文件夹里面。</p><ul><li>如果 <code>dst</code>文件夹不存在，那么就会创建一个 <code>dst</code> 文件夹</li><li>如果 <code>dst</code>文件夹已存在。 If <code>dirs_exist_ok</code> is false (the default) and <code>dst</code> already exists, a <code>FileExistsError</code> is raised. If <code>dirs_exist_ok</code> is true, the copying operation will continue if it encounters existing directories, and files within the dst tree will be <strong>overwritten</strong> by corresponding files from the <code>src</code> tree.</li></ul><h2 id="_3-remove-directory" tabindex="-1"><a class="header-anchor" href="#_3-remove-directory" aria-hidden="true">#</a> 3. remove directory</h2><p>将这个文件夹及其内容删除</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>directory<span class="token punctuation">)</span>    <span class="token comment"># 如果没有，则FileNotFoundError</span>

shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>    <span class="token comment"># 不能删除文件， \`NotADirectoryError\`</span>

shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>directory<span class="token punctuation">,</span> ignore_errors<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-move-file-or-directory" tabindex="-1"><a class="header-anchor" href="#_4-move-file-or-directory" aria-hidden="true">#</a> 4. move file or directory</h2><p><code>src</code>是文件自然不用说。</p><p>如果 <code>dst</code> 文件夹存在，将 <code>src</code>文件夹及其内容搬进<code>dst</code>中。</p><p>如果 <code>dst</code> 文件夹不存在，将 <code>src</code>文件夹及其内容搬进<code>dst</code>所在父目录处，并重命名为<code>dst</code>。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># src -&gt; dst</span>

shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span>

shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token string">&#39;./f/g&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./aaa&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),i=[o];function c(p,l){return s(),a("div",null,i)}const d=n(t,[["render",c],["__file","shutil.html.vue"]]);export{d as default};
