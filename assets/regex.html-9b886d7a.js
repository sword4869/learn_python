import{_ as c,V as p,W as t,Y as n,Z as e,$ as a,X as o,D as l}from"./framework-48406333.js";const d={},i=o('<p>位置</p><ul><li><code>^</code>：匹配字符串开头</li><li><code>$</code>：匹配字符串末尾</li></ul><p>次数：</p><ul><li><p><code>?</code>：0次或1次。</p><p><code>?</code> 等价于 <code>{0,1}</code></p><p><code>colou?r</code> 可以匹配 <code>color</code> 或者 <code>colour</code>，</p></li><li><p><code>+</code> 号：1次或多次。</p><p><code>+</code> 等价于 <code>{1,}</code></p><p><code>runoo+b</code>，可以匹配 <code>runoob</code>、<code>runooob</code>、<code>runoooooob</code> 等，</p></li><li><p><code>*</code> 号：0次、或1次、或多次</p><p><code>*</code> 等价于 <code>{0,}</code></p><p><code>runoo*b</code>，可以匹配 <code>runob、runoob、runoooooob</code> 等，</p></li><li><p><code>{n}</code>: n次</p></li><li><p><code>{n,}</code>：至少n次</p></li><li><p><code>{n,m}</code>: n到m次</p></li><li><p><code>{,n}</code>: 小于等于n次</p></li><li><p><code>{a12|b34}</code>: <code>a12</code> or <code>b34</code></p></li></ul><p>character class:</p><ul><li><code>[xxx]</code>, 匹配 [...] 中的所有字符</li><li><code>[^xxx]</code>, 匹配 除了[...] 中的所有字符</li><li><code>[A-Z</code>: <code>-</code>表示范围</li></ul><p>Enclose a group of RegEx: <code>()</code></p><p>特殊字符：</p><ul><li><code>()</code>, <code>[]</code>, <code>{}</code>是特殊字符，但是<code>&lt;&gt;</code>不是。</li></ul><p>单词匹配：</p><ul><li><code>\\b</code>： 词头或词尾巴（单词边界） <code>\\bCha</code>：匹配词头，<code>Chapter</code><code>Cha\\b</code>:匹配词尾巴，<code>Chapter</code></li><li><code>\\B</code>：词中（非单词边界） <code>\\Bapt</code>：匹配<code>Chapter</code>, 不匹配<code>aptitude</code></li></ul><p>常见单字符：</p><ul><li><p><code>[0-9]</code>, <code>[1-9]</code>, <code>[a-z]</code>, <code>[A-Z]</code>, <code>[A-Z a-z]</code>(这是表示包含空格字符， <code>[A-Z a-z]</code>一样，空格字符效果重复冗余了，并不是连续的空格)</p></li><li><p><code>\\d</code> digit, 即 <code>[0-9]</code>。</p><p><code>\\D</code> non-digit, 即 <code>[^0-9]</code>。</p></li><li><p><code>\\w</code> alphanumeric, 即 <code>[0-9a-z0-9A-Z_]</code> 数字字母下划线</p><p><code>\\W</code> non-alphanumeric</p></li><li><p><code>\\s</code> whitespace, <em>i.e.</em> <code>[ \\f\\n\\r\\t\\v]</code>(空格、换页符、换行符、回车符、制表符、垂直制表符)。注意 Unicode 正则表达式会匹配全角空格符。</p><p><code>\\S</code> non-whitespace</p></li><li><p><code>.</code> 匹配除<code>\\n</code>,<code>\\r</code>之外的任何单字符</p></li></ul><p>常见例子：</p><ul><li>全字符：<code>[\\s\\S]</code></li></ul><h2 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> python</h2>',16),r={href:"https://www.geeksforgeeks.org/python-regex/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://docs.python.org/3/howto/regex.html",target:"_blank",rel:"noopener noreferrer"},k=o(`<ul><li><code>re.search</code>：扫描<strong>整个字符串</strong>并返回第一个成功的匹配。</li><li><code>re.match</code>：尝试从字符串的<strong>起始位置</strong>匹配一个模式，如果不是起始位置匹配成功的话，返回None。</li><li><code>re.findall</code>：返回一个包含所有匹配结果的列表。</li><li><code>re.sub</code>：替换字符串中的匹配项。</li><li><code>re.split</code>：根据匹配项分割字符串。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> re
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> string <span class="token operator">=</span> <span class="token string">&#39;Tue Sep 12 15:50:08 2023   \\r\\n Volatile Unc    18%   GPU  Name    21% TCC/WDDM&#39;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">&#39;\\d{,2}%&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>re<span class="token punctuation">.</span>Match <span class="token builtin">object</span><span class="token punctuation">;</span> span<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">match</span><span class="token operator">=</span><span class="token string">&#39;18%&#39;</span><span class="token operator">&gt;</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">&#39;\\d{,2}%&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;\\d{,2}%&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;18%&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;21%&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;\\d{,2}%&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;Tue Sep 12 15:50:08 2023   \\r\\n Volatile Unc    &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;   GPU  Name    &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; TCC/WDDM&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="js" tabindex="-1"><a class="header-anchor" href="#js" aria-hidden="true">#</a> js</h2><p>在js程序中，regex用<code>//</code>包裹</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;123abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> patt1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]+abc$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>patt1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> fileNameWithout_dot_md_Profix <span class="token operator">=</span> fileName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.md$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function g(m,h){const s=l("ExternalLinkIcon");return p(),t("div",null,[i,n("p",null,[n("a",r,[e("https://www.geeksforgeeks.org/python-regex/"),a(s)])]),n("p",null,[n("a",u,[e("https://docs.python.org/3/howto/regex.html"),a(s)])]),k])}const b=c(d,[["render",g],["__file","regex.html.vue"]]);export{b as default};
